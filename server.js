// –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –º–æ–¥—É–ª–∏
const express = require('express');
const bodyParser = require('body-parser');
const fetch = require('node-fetch');
const cors = require('cors');

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º Express –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
const app = express();
const PORT = process.env.PORT || 3000;

// –ü–æ–ª—É—á–∞–µ–º —Ç–æ–∫–µ–Ω –±–æ—Ç–∞ –∏ ID —á–∞—Ç–∞ –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è –¥–ª—è –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏
const BOT_TOKEN = process.env.BOT_TOKEN;
const CHAT_ID = process.env.CHAT_ID;

// –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Middleware
app.use(cors()); // –í–∫–ª—é—á–∞–µ–º Cross-Origin Resource Sharing
app.use(bodyParser.json()); // –ü–∞—Ä—Å–∏–º JSON-—Ç–µ–ª–∞ –∑–∞–ø—Ä–æ—Å–æ–≤
app.use(bodyParser.urlencoded({ extended: true })); // –ü–∞—Ä—Å–∏–º URL-encoded —Ç–µ–ª–∞ –∑–∞–ø—Ä–æ—Å–æ–≤

// --- –ú–ê–†–®–†–£–¢–´ ---

// –ö–æ—Ä–Ω–µ–≤–æ–π –º–∞—Ä—à—Ä—É—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ "–∑–¥–æ—Ä–æ–≤—å—è" —Å–µ—Ä–≤–µ—Ä–∞ —Å–µ—Ä–≤–∏—Å–æ–º UptimeRobot
app.get('/', (req, res) => {
  res.status(200).send('–°–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω –∏ –≥–æ—Ç–æ–≤ –ø—Ä–∏–Ω–∏–º–∞—Ç—å –∑–∞—è–≤–∫–∏.');
});

// –ú–∞—Ä—à—Ä—É—Ç –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ñ–æ—Ä–º—ã —Å –ª–µ–Ω–¥–∏–Ω–≥–∞
app.post('/submit', async (req, res) => {
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã –ª–∏ —Å–µ–∫—Ä–µ—Ç–Ω—ã–µ –∫–ª—é—á–∏
  if (!BOT_TOKEN || !CHAT_ID) {
    console.error('BOT_TOKEN –∏–ª–∏ CHAT_ID –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã.');
    return res.status(500).json({ success: false, message: '–û—à–∏–±–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ —Å–µ—Ä–≤–µ—Ä–∞.' });
  }

  // –ò–∑–≤–ª–µ–∫–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ —Ç–µ–ª–∞ –∑–∞–ø—Ä–æ—Å–∞
  const { name, contact, project } = req.body;

  // –ë–∞–∑–æ–≤–∞—è –≤–∞–ª–∏–¥–∞—Ü–∏—è
  if (!name || !contact || !project) {
    return res.status(400).json({ success: false, message: '–í—Å–µ –ø–æ–ª—è –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã –¥–ª—è –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è.' });
  }

  // –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤ Telegram
  // –ò—Å–ø–æ–ª—å–∑—É–µ–º Markdown –¥–ª—è –∫—Ä–∞—Å–∏–≤–æ–≥–æ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
  const messageText = `
*–ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞ —Å –ª–µ–Ω–¥–∏–Ω–≥–∞ OV1DI!* üöÄ

*–ò–º—è:* ${name}
*–ö–æ–Ω—Ç–∞–∫—Ç (Email/Telegram):* ${contact}

*–û –ø—Ä–æ–µ–∫—Ç–µ:*
${project}
  `;

  // URL –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π —á–µ—Ä–µ–∑ Telegram Bot API
  const telegramApiUrl = `https://api.telegram.org/bot${BOT_TOKEN}/sendMessage`;

  try {
    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ —á–∞—Ç Telegram
    const response = await fetch(telegramApiUrl, {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
      },
      body: JSON.stringify({
        chat_id: CHAT_ID,
        text: messageText,
        parse_mode: 'Markdown', // –ò—Å–ø–æ–ª—å–∑—É–µ–º Markdown
      }),
    });

    const responseData = await response.json();

    if (responseData.ok) {
      // –ï—Å–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ
      console.log('–ó–∞—è–≤–∫–∞ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ –≤ Telegram.');
      res.status(200).json({ success: true, message: '–í–∞—à–∞ –∑–∞—è–≤–∫–∞ –±—ã–ª–∞ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞!' });
    } else {
      // –ï—Å–ª–∏ Telegram API –≤–µ—Ä–Ω—É–ª –æ—à–∏–±–∫—É
      console.error('–û—à–∏–±–∫–∞ Telegram API:', responseData);
      res.status(500).json({ success: false, message: '–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ Telegram.' });
    }
  } catch (error) {
    // –ï—Å–ª–∏ –ø—Ä–æ–∏–∑–æ—à–ª–∞ —Å–µ—Ç–µ–≤–∞—è –∏–ª–∏ –¥—Ä—É–≥–∞—è –æ—à–∏–±–∫–∞
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –∑–∞–ø—Ä–æ—Å–∞ –≤ Telegram:', error);
    res.status(500).json({ success: false, message: '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –≤–Ω—É—Ç—Ä–µ–Ω–Ω—è—è –æ—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞.' });
  }
});

// –ó–∞–ø—É—Å–∫–∞–µ–º —Å–µ—Ä–≤–µ—Ä
app.listen(PORT, () => {
  console.log(`–°–µ—Ä–≤–µ—Ä —Å–ª—É—à–∞–µ—Ç –ø–æ—Ä—Ç ${PORT}`);
});